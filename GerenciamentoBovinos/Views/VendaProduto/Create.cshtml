@model GerenciamentoBovinos.Models.VendaProduto

@{
    ViewBag.Title = "Venda de Produtos";
}

<h2 class="text-center">Venda de Produtos</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.DtVenda, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.TextBoxFor(model => model.DtVenda, new { type = "date", @class = "form-control", id = "dtVenda" })
                @Html.ValidationMessageFor(model => model.DtVenda, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.PrazoEntrega, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.TextBoxFor(model => model.PrazoEntrega, new { type = "date", @class = "form-control", id = "pzEntrega" })
                @Html.ValidationMessageFor(model => model.PrazoEntrega, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.MargemVenda, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.EditorFor(model => model.MargemVenda, new { htmlAttributes = new { @class = "form-control", @min = 0, @max = 100 } })
                @Html.ValidationMessageFor(model => model.MargemVenda, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.Label("Cliente", htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.DropDownList("ClienteId", null, htmlAttributes: new { @class = "form-control" })
                <label class="text-danger" id="validaCliente"></label>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-3">
                @Html.Label("Produtos", htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.DropDownList("ProdutoId", null, htmlAttributes: new { @class = "form-control", @onchange = "qtdProd($(this).val())" })
                <label class="text-danger" id="validaProduto"></label>
            </div>

            <div class="col-md-2">
                @Html.Label("Disponivel", htmlAttributes: new { @class = "control-label col-md-12" })
                @Html.TextBox("ProdutoQtd", null, htmlAttributes: new { @class = "form-control", @readonly = true })
                <label class="text-danger" id="validaQtd"></label>
            </div>

            <div class="col-md-2">
                @Html.Label("Valor de Custo", htmlAttributes: new { @class = "control-label col-md-12" })
                @Html.TextBox("VlrCusto", null, htmlAttributes: new { @class = "form-control", @readonly = true })
            </div>

            <div class="col-md-2">
                @Html.Label("Quantidade", htmlAttributes: new { @class = "control-label col-md-12" })
                @Html.TextBox("Qtd", null, htmlAttributes: new { @type = "number", @class = "form-control", @min = 0 })
                <label class="text-danger" id="validaQtdVenda"></label>
            </div>

            <div class="col-md-2">
                @Html.Label("Ação", htmlAttributes: new { @class = "control-label col-md-12" })
                <input type="button" value="Adicionar Items" id="btnAddItem" class="btn btn-success" onclick="addItem();" />
            </div>
        </div>

        <div class="col-md-10 offset-1">
            <table class="table table-bordered table-condensed table-hover table-striped">
                <thead>
                    <h3 class="text-center mt-5">Lista de Produtos</h3>
                    <tr>
                        <th>Produto</th>
                        <th>Quantidade</th>
                        <th>Valor Unitário</th>
                        <th>Valor Total</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" onclick="validaDropDown();" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
    function validaDropDown() {
        var cliente = $("#ClienteId").val();
        var produto = $("#ProdutoId").val();
        if (cliente == null && produto == null) {
            $("#validaCliente").text('Campo obrigatório.');
            $("#validaProduto").text('Campo obrigatório.');
            setTimeout(clearText, 2000);
        }
        else if (cliente == null) {
            $("#validaCliente").text('Campo obrigatório.');
            setTimeout(clearText, 2000);
        }
        else if (produto == null) {
            $("#validaProduto").text('Campo obrigatório.');
            setTimeout(clearText, 2000);
        }
    }

    function qtdProd(selected) {
        $.getJSON("QtdProdutos", { id: selected }, function (json) {
            $("#ProdutoQtd").val(json[0]);
            $("#VlrCusto").val(json[1]);
        });
    }

    function addItem() {

        var Margem = $("#MargemVenda").val();
        var Selecionado = $("#ProdutoId").val();
        var Disponivel = parseInt($("#ProdutoQtd").val());
        var Qtd = parseInt($("#Qtd").val());

        if (Disponivel <= 0) {
            $("#validaQtd").text('Sem estoque.');
            setTimeout(clearText, 2000);
            return;
        }
        else if (Disponivel < Qtd) {
            $("#validaQtdVenda").text('Superior ao estoque.');
            setTimeout(clearText, 2000);
        }
        else if (Qtd == 0 && Disponivel > 0) {
            $("#validaQtdVenda").text('Digite a qtd.');
            setTimeout(clearText, 2000);
        }
        else if (Selecionado == null) {
            $("#validaProduto").text('Campo obrigatório.');
            setTimeout(clearText, 2000);
        }

        if (Qtd != "" && Margem != "" && Qtd > 0 && Qtd <= Disponivel) {
            $('#btnAddItem').prop('disabled', true);
            //Chama o método AddItem que vai retornar o JSON
            $.getJSON("AddItem", { qtd: Qtd, selected: Selecionado, margem: Margem }, function (json) {
                var tr;
                var ret = json;
                //Anexa cada linha na tabela HTML
                tr = $('<tr/>');
                tr.append("<td>" + json.Produto.NomeProduto + "</td>");
                tr.append("<td>" + json.Qtd + "</td>");
                tr.append("<td>" + json.ValorUnitario + "</td>");
                tr.append("<td>" + json.ValorTotal + "</td>");
                $('table').append(tr);

                //Atualizando os campos disponivel e valor do produto
                $("#ProdutoId").val('1');
                qtdProd('1');
            });

            setTimeout(enableButton, 3000);
        }
    };

    function enableButton() {
        $('#btnAddItem').prop('disabled', false);
    }

    function clearText() {
        $('#validaQtd').text('');
        $('#validaQtdVenda').text('');
        $('#validaProduto').text('');
        $('#validaCliente').text('');
    }

    $("#Qtd").val(0);
    $("#MargemVenda").val(30);

    document.getElementById("dtVenda").valueAsDate = new Date();
    document.getElementById("pzEntrega").valueAsDate = new Date();
</script>
