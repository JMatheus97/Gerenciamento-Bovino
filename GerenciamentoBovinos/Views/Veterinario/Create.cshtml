@model GerenciamentoBovinos.Models.Veterinario

@{
    ViewBag.Title = "Cadastrar Veterinario";
}

<h2 class="text-center">Cadastrar Veterinário</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.CRMV, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.EditorFor(model => model.CRMV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CRMV, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.CPFCNPJ, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.TextBoxFor(model => model.CPFCNPJ, new { @class = "form-control", @name = "cpfcnpj", onkeypress = "mascaraMutuario(this,cpfCnpj)", onblur = "clearTimeout()", maxlength = "18" })
                @Html.ValidationMessageFor(model => model.CPFCNPJ, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.TextBoxFor(model => model.Telefone, new { @class = "form-control", @name = "telefone", onkeypress = "mascara(this, mtel)", onblur = "clearTimeout()", maxlength = "14" })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.Rua, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.EditorFor(model => model.Rua, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rua, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-1">
                @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.TextBoxFor(model => model.Cep, new { @class = "form-control", @name = "cep", onkeypress = "mascara(this, mcep)", onblur = "clearTimeout()", maxlength = "9" })
                @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.TextAreaFor(model => model.Complemento, new { @class = "col-md-12 form-control", rows = "4" })
                @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-danger" })
                <input type="submit" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/validations_pt-br")
}
<script src="~/Scripts/jquery-3.3.1.min.js"></script>